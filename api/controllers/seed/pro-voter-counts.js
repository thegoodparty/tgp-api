module.exports = {
  friendlyName: 'Get pro voter counts',

  description: 'Get pro voter count and type by hubspot ids.',

  inputs: {},

  exits: {
    success: {
      description: 'Ok',
      responseType: 'ok',
    },
  },

  fn: async function (inputs, exits) {
    const ids = [
      '22165274119',
      '22114338433',
      '22107654455',
      '22089864049',
      '22068755055',
      '22064168873',
      '22032487473',
      '22030311701',
      '22011554416',
      '22001442200',
      '21979443271',
      '21967443320',
      '21950319994',
      '21951569470',
      '21936783986',
      '21929658918',
      '21914252341',
      '21912600860',
      '21896940945',
      '21889907321',
      '21878832699',
      '21873783895',
      '21871698319',
      '21856116905',
      '21851361958',
      '21825256878',
      '21806338156',
      '21806394180',
      '21806476561',
      '21805968218',
      '21805662329',
      '21804443321',
      '21800349500',
      '21758075260',
      '21715095448',
      '21713905457',
      '21658633238',
      '21653255576',
      '21950353818',
      '21632269631',
      '21598494501',
      '21595293511',
      '21578919026',
      '21556685656',
      '21549229229',
      '21531287140',
      '21525576577',
      '21521047584',
      '21520329775',
      '21489540531',
      '21481046858',
      '21478654348',
      '21429873290',
      '21424002659',
      '21419835694',
      '21413014027',
      '21411881879',
      '21403302565',
      '21402118044',
      '21361994900',
      '21311522391',
      '21302781306',
      '21302682763',
      '21293468002',
      '21276635715',
      '21142075151',
      '21109484124',
      '21085467962',
      '21072044971',
      '20957407150',
      '20935155553',
      '20934957392',
      '20929013157',
      '20914968498',
      '20907053227',
      '20908389703',
      '20908247657',
      '20849553043',
      '20846474314',
      '20832425022',
      '20823830700',
      '20823039654',
      '20752023964',
      '20749166108',
      '20730585362',
      '20702473515',
      '20666028970',
      '20608383402',
      '20603199856',
      '20602809752',
      '20584820081',
      '20558978982',
      '20555203708',
      '20544736098',
      '20534757012',
      '20490726301',
      '20466931350',
      '20447093426',
      '20441898630',
      '20438560897',
      '20436265024',
      '20430526351',
      '20422815580',
      '20412976419',
      '20404674720',
      '20399705974',
      '20399351701',
      '20388423316',
      '20379524789',
      '20363826230',
      '20341727335',
      '20288223353',
      '20284567916',
      '20539245074',
      '20254058922',
      '20233550864',
      '20226254853',
      '20218225026',
      '20219294644',
      '20218651136',
      '20215273072',
      '20215226999',
      '20606969193',
      '20183789661',
      '20162959896',
      '20182510661',
      '20140156809',
      '20130511999',
      '20101783642',
      '20007487542',
      '20182274439',
      '20001840186',
      '19824699760',
      '19824330621',
      '19821013934',
      '19804879478',
      '19798841194',
      '19794670463',
      '19792493859',
      '19779743800',
      '19777310282',
      '19767261453',
      '20412396893',
      '19721326734',
      '19689933398',
      '19687337060',
      '19659605890',
      '19652989519',
      '19652210183',
      '19613286506',
      '19605680820',
      '19599799900',
      '19599606930',
      '19583054166',
      '19583937924',
      '19560449309',
      '19532148519',
      '19510918411',
      '19504340603',
      '19477348125',
      '19473318438',
      '19470382992',
      '19466813484',
      '19448089691',
      '19434968065',
      '19401357628',
      '19389421183',
      '19388093720',
      '19367336264',
      '19360218789',
      '19359438486',
      '19356890899',
      '19341676862',
      '19309756677',
      '19308202796',
      '19279150377',
      '19235132038',
      '19214145838',
      '19205632517',
      '20209329688',
      '19181546565',
      '19170452226',
      '19166908711',
      '19149453946',
      '19127581015',
      '19107661360',
      '19097345932',
      '19075755592',
      '19069587984',
      '21496271915',
      '19042414138',
      '19028058445',
      '19013511328',
      '18971607122',
      '18923659787',
      '18852165479',
      '21115481528',
      '18713527649',
      '18613046313',
      '18477550926',
      '18388444277',
      '21548854066',
      '18084508185',
      '18077685097',
      '18024152662',
      '18000989209',
      '17750723913',
      '17543618137',
      '16902887493',
    ];

    let totalLocal = 0;
    let totalCounty = 0;
    let totalOther = 0;
    let foundLocal = 0;
    let foundCounty = 0;
    let foundOther = 0;
    let found = 0;
    let noLevel = 0;
    for (const id of ids) {
      // and (details->>'ballotLevel'='LOCAL' or details->>'ballotLevel'='COUNTY')
      const response = await sails.sendNativeQuery(
        `select id from public.campaign where data->>'hubspotId'='${id}' limit 1`,
      );
      const rows = response?.rows;
      if (rows && rows.length > 0) {
        const row = rows[0];
        const campaignId = row.id;
        try {
          const campaign = await Campaign.findOne({
            id: campaignId,
            pathToVictory: { '!=': null },
          }).populate('pathToVictory');
          if (!campaign || !campaign.pathToVictory) {
            console.log(`hubspotId ${id} has no pathToVictory`);
            continue;
          }
          found++;
          const voters = campaign.pathToVictory.data.totalRegisteredVoters;
          const level = campaign.details?.ballotLevel;
          if (!level) {
            console.log(`hubspotId ${id} has no ballotLevel`);
            noLevel++;
            continue;
          }
          if (voters && !isNaN(voters) && level) {
            if (level === 'LOCAL') {
              totalLocal += parseInt(voters);
              foundLocal++;
            } else if (level === 'COUNTY') {
              totalCounty += parseInt(voters);
              foundCounty++;
            } else {
              totalOther += parseInt(voters);
              foundOther++;
            }
          }
          console.log(
            `voters for ${id}: ${voters}. Total Local: ${totalLocal}. Found Local: ${foundLocal}. 
              Total County: ${totalCounty}. Found County: ${foundCounty}. Total Other: ${totalOther}. Found Other: ${foundOther}. noLevel: ${noLevel}. Found: ${found}`,
          );
        } catch (e) {
          console.log('error', e);
        }
      }
    }
    console.log('all done');

    return exits.success({
      message: total,
    });
  },
};
